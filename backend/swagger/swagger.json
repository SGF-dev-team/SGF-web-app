{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "1.0.5",
    "title": "SGF WEB APP",
    "termsOfService": "http://swagger.io/terms/",
    "contact": { "email": "" },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "127.0.0.1:3000",
  "basePath": "/v2",
  "tags": [
    {
      "name": "register",
      "description": "Register a new user",
      "externalDocs": {
        "description": "",
        "url": "http://127.0.0.1:8000/api/v1/custom/register/"
      }
    },
    {
      "name": "Verify-Email",
      "description": "Verifying an user",
      "externalDocs": {
        "description": "To verify a single user email adress",
        "url": "http://127.0.0.1:8000/api/v1/custom/verify-email/"
      }
    }
  ],
  "schemes": ["https", "http"],
  "paths": {
    "/api/v1/custom/user": {
      "post": {
        "tags": ["user"],
        "summary": "User's information",
        "description": "",
        "operationId": "User's information",

        "parameters": [
          {
            "name": "user",
            "in": "user",
            "description": "User's information",
            "required": true,
            "type": "",
            "format": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/ApiResponse" }
          }
        },
        "security": [{ "petstore_auth": ["write:pets", "read:pets"] }]
      }
    },
    "/api/v1/custom/password/reset/": {
      "post": {
        "tags": ["password"],
        "summary": "Reset Password",
        "description": "",
        "operationId": "resetPassword",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json", "application/xml"],

        "responses": { "405": { "description": "Invalid Email" } }
      },
      "Post": {
        "tags": ["reset", "password"],
        "summary": "Reset user password",
        "description": "",
        "operationId": "reset",
        "consumes": ["application/json", "application/xml"],
        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Reset user password",
            "required": true
          }
        ],
        "responses": {
          "400": { "description": "Invalid email address provided" },
          "405": { "description": "Validation exception" }
        }
      }
    },
    "/api/v1/custom/password/reset/confirm": {
      "get": {
        "tags": ["reset", "password", "confirm"],
        "summary": "Reset Password Confirm",
        "description": "A confirmation while resetting the password",

        "produces": ["application/json", "application/xml"],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "JSON Body",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "JSON Body"
            }
          },
          "400": { "description": "Invalid status value" }
        }
      }
    }
  }
}
